{"version":3,"sources":["webpack:///./src/app/Portal/Master/areamaster/areamaster.component.html","webpack:///./src/app/Portal/Master/complainmaster/complainmaster.component.html","webpack:///./src/app/Portal/Master/kycmaster/kycmaster.component.html","webpack:///./src/app/Portal/Master/mastermanager/mastermanager.component.html","webpack:///./src/app/Portal/Master/servicemaster/servicemaster.component.html","webpack:///./src/app/Portal/Master/statusmaster/statusmaster.component.html","webpack:///./src/app/Portal/Master/subscriptionmaster/subscriptionmaster.component.html","webpack:///./src/app/Portal/Master/taxmaster/taxmaster.component.html","webpack:///./src/app/Portal/Master/userrolemaster/userrolemaster.component.html","webpack:///./src/app/Portal/Master/areamaster/areamaster.component.css","webpack:///./src/app/Portal/Master/areamaster/areamaster.component.ts","webpack:///./src/app/Portal/Master/complainmaster/complainmaster.component.css","webpack:///./src/app/Portal/Master/complainmaster/complainmaster.component.ts","webpack:///./src/app/Portal/Master/kycmaster/kycmaster.component.css","webpack:///./src/app/Portal/Master/kycmaster/kycmaster.component.ts","webpack:///./src/app/Portal/Master/master.module.ts","webpack:///./src/app/Portal/Master/master.routing.ts","webpack:///./src/app/Portal/Master/mastermanager/mastermanager.component.css","webpack:///./src/app/Portal/Master/mastermanager/mastermanager.component.ts","webpack:///./src/app/Portal/Master/servicemaster/servicemaster.component.css","webpack:///./src/app/Portal/Master/servicemaster/servicemaster.component.ts","webpack:///./src/app/Portal/Master/statusmaster/statusmaster.component.css","webpack:///./src/app/Portal/Master/statusmaster/statusmaster.component.ts","webpack:///./src/app/Portal/Master/subscriptionmaster/subscriptionmaster.component.css","webpack:///./src/app/Portal/Master/subscriptionmaster/subscriptionmaster.component.ts","webpack:///./src/app/Portal/Master/taxmaster/taxmaster.component.css","webpack:///./src/app/Portal/Master/taxmaster/taxmaster.component.ts","webpack:///./src/app/Portal/Master/userrolemaster/userrolemaster.component.css","webpack:///./src/app/Portal/Master/userrolemaster/userrolemaster.component.ts"],"names":[],"mappings":"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","file":"Portal-Master-master-module-es5.js","sourcesContent":["module.exports = \"<mat-card>\\r\\n    <mat-card-content>\\r\\n        <form [formGroup]=\\\"areaform\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\r\\n                <div fxFlex.gt-sm=\\\"80\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Area Name\\\" type=\\\"textarea\\\" formControlName=\\\"AreaName\\\" required>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Status</mat-label>\\r\\n                            <mat-select formControlName=\\\"Status\\\" placeholder=\\\"Select Status\\\" required>\\r\\n                                <mat-option value=\\\"1\\\">Active </mat-option>\\r\\n                                <mat-option value=\\\"0\\\">DeActive </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex.gt-sm=\\\"20\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-center m-t-30\\\">\\r\\n                    <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid == 0\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"\\r\\n                        (click)=\\\"CreateAreaMaster()\\\" [disabled]=\\\"!areaform.valid\\\">Save</button>\\r\\n                    <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid > 0\\\" mat-raised-button color=\\\"primary\\\"\\r\\n                        (click)=\\\"UpdateAreaMaster()\\\" [disabled]=\\\"!areaform.valid\\\">Update</button>\\r\\n                    <button mat-raised-button color=\\\"default\\\" (click)=\\\"ResetAreaMaster()\\\">Clear</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <table mat-table matSort [dataSource]=\\\"lists.Arealist\\\">\\r\\n                    <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Area Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status?'Active':'DeActive'}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"action\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n                            <a>\\r\\n                                <mat-icon style=\\\"color:black\\\" (click)=\\\"EditAreaMaster(element)\\\"><i\\r\\n                                        class=\\\"fa fa-pencil\\\"></i>\\r\\n                                </mat-icon>\\r\\n                            </a>\\r\\n                            <mat-icon class=\\\"m-l-10\\\" style=\\\"color:#E91E63\\\" (click)=\\\"DeleteConfirmation(element)\\\"><i\\r\\n                                    class=\\\"fa fa-trash\\\"></i>\\r\\n                            </mat-icon>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"lists.displayedColumns; sticky: true\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: lists.displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20,25,50]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </mat-card-content>\\r\\n</mat-card>\"","module.exports = \"<mat-card>\\r\\n    <mat-card-content>\\r\\n        <form [formGroup]=\\\"complainmasterform\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\r\\n                    <div fxFlex.gt-sm=\\\"80\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                        \\r\\n                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                                <mat-form-field>\\r\\n                                    <input matInput placeholder=\\\"Complaint Type\\\" type=\\\"textarea\\\" formControlName=\\\"ComplaintType\\\" required>\\r\\n                                </mat-form-field>\\r\\n                                <p class=\\\"text-danger m-t-0 font-16\\\"\\r\\n                                *ngIf=\\\"copmplainForm.ComplaintType.touched && copmplainForm.ComplaintType.errors?.pattern\\\">\\r\\n                                Complaint Type contains only characters.</p>\\r\\n                            </div>\\r\\n                           \\r\\n                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                                <mat-form-field>\\r\\n                                    <mat-label>Status</mat-label>\\r\\n                                    <mat-select formControlName=\\\"Status\\\" required>\\r\\n                                        <mat-option value=\\\"1\\\">Active </mat-option>\\r\\n                                        <mat-option value=\\\"0\\\">DeActive </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div fxFlex.gt-sm=\\\"20\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-center m-t-30\\\">\\r\\n                            <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid == 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"CreateComplainMaster()\\\" [disabled]=\\\"!complainmasterform.valid\\\">Save</button>\\r\\n                            <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid > 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"UpdateComplainMaster()\\\" [disabled]=\\\"!complainmasterform.valid\\\">Update</button>\\r\\n                            <button mat-raised-button color=\\\"default\\\" (click)=\\\"resetComplainMaster()\\\">Clear</button>\\r\\n                        </div>\\r\\n                        \\r\\n                </div>\\r\\n                </form>\\r\\n        \\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                                <mat-form-field>\\r\\n                                    <input matInput placeholder=\\\"Search\\\" (keyup)=\\\"applyFilter($event.target.value)\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                                <table mat-table matSort [dataSource]=\\\"lists.complist\\\">\\r\\n                                    <ng-container matColumnDef=\\\"ctype\\\">\\r\\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Complaint Type </th>\\r\\n                                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.complaint_name}} </td>\\r\\n                                    </ng-container>\\r\\n                                    \\r\\n                                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n                                        <td mat-cell *matCellDef=\\\"let element\\\">{{element.status?'Active':'DeActive'}} </td>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container matColumnDef=\\\"action\\\">\\r\\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n                                        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n                                            <a>\\r\\n                                                <mat-icon style=\\\"color:black\\\" (click)=\\\"EditComplainMaster(element)\\\"><i\\r\\n                                                        class=\\\"fa fa-pencil\\\"></i>\\r\\n                                                </mat-icon>\\r\\n                                            </a>\\r\\n                                            <mat-icon class=\\\"m-l-10\\\" style=\\\"color:#E91E63\\\" (click)=\\\"DeleteConfirmation(element)\\\"><i\\r\\n                                                    class=\\\"fa fa-trash\\\"></i>\\r\\n                                            </mat-icon>\\r\\n                                        </td>\\r\\n                                    </ng-container>\\r\\n                                    <tr mat-header-row *matHeaderRowDef=\\\"lists.displayedColumns; sticky: true\\\"></tr>\\r\\n                                    <tr mat-row *matRowDef=\\\"let row; columns: lists.displayedColumns;\\\"></tr>\\r\\n                                </table>\\r\\n                                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20,25,50]\\\" showFirstLastButtons></mat-paginator>\\r\\n                            </div>\\r\\n                        </div>\\r\\n      \\r\\n                    </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \"<mat-card>\\r\\n    <mat-card-content>\\r\\n        <form [formGroup]=\\\"kycnasterform\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\r\\n\\r\\n                <div fxFlex.gt-sm=\\\"80\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n                    <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Document Name\\\" type=\\\"textarea\\\" formControlName=\\\"DocumentName\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <p class=\\\"text-danger m-t-0 font-16\\\" *ngIf=\\\"kycForm.DocumentName.touched && kycForm.DocumentName.errors?.pattern\\\">\\r\\n                            Document Name contains only characters.</p>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Document Type</mat-label>\\r\\n                            <mat-select placeholder=\\\"Select Document Type\\\" formControlName=\\\"DocumentType\\\" required>\\r\\n                                <!-- <mat-option value=\\\"0\\\">Image along with Id </mat-option> -->\\r\\n                                <mat-option value=\\\"0\\\">Image </mat-option>\\r\\n                                <mat-option value=\\\"1\\\">Id </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Document Form</mat-label>\\r\\n                            <mat-select placeholder=\\\"Select Document Form\\\" formControlName=\\\"DocumentForm\\\" required>\\r\\n                                <mat-option value=\\\"0\\\">Registration </mat-option>\\r\\n                                <mat-option value=\\\"1\\\">Profile </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Status</mat-label>\\r\\n                            <mat-select placeholder=\\\"Select Status\\\" formControlName=\\\"Status\\\" required>\\r\\n                                <mat-option value=\\\"1\\\">Active </mat-option>\\r\\n                                <mat-option value=\\\"0\\\">DeActive </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n                    <div fxFlex.gt-sm=\\\"20\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-center m-t-30\\\">\\r\\n                        <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid == 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"CreateKyc()\\\" [disabled]=\\\"!kycnasterform.valid\\\">Save</button>\\r\\n                        <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid > 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"UpdateKycMaster()\\\" [disabled]=\\\"!kycnasterform.valid\\\">Update</button>\\r\\n                        <button mat-raised-button color=\\\"default\\\" (click)=\\\"resetKycform()\\\">Clear</button>\\r\\n                    </div>\\r\\n\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Search\\\" (keyup)=\\\"applyFilter($event.target.value)\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <table mat-table matSort [dataSource]=\\\"lists.kyclist\\\">\\r\\n                    <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Document Name</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.doc_name}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"Type\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Document Type</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.doc_type?'Id':'Image'}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"Form\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Document Form</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.form_id?'Profile':'Registration'}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Document status</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status?'Active':'DeActive'}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"action\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n                            <a>\\r\\n                                <mat-icon style=\\\"color:black\\\" (click)=\\\"EditKycMaster(element)\\\"><i\\r\\n                                        class=\\\"fa fa-pencil\\\"></i>\\r\\n                                </mat-icon>\\r\\n                            </a>\\r\\n                            <mat-icon class=\\\"m-l-10\\\" style=\\\"color:#E91E63\\\" (click)=\\\" DeleteConfirmation(element)\\\"><i\\r\\n                                    class=\\\"fa fa-trash\\\"></i>\\r\\n                            </mat-icon>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"lists.displayedColumns; sticky: true\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: lists.displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20,25,50]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </mat-card-content>\\r\\n</mat-card>\"","module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <mat-tab-group>\\n            <mat-tab label=\\\"Create Branch\\\">\\n                <div fxLayout=\\\"row wrap\\\">\\n                    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                        <div fxLayout=\\\"row wrap\\\">\\n                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"p-l-10\\\">\\n                                <mat-form-field>\\n                                    <mat-label>City</mat-label>\\n                                    <mat-select [(ngModel)]=\\\"lists.name\\\">\\n                                        <mat-option *ngFor=\\\"let u of lists.Citylist\\\" [value]=\\\"u.name\\\">\\n                                            {{u.name}}\\n                                        </mat-option>\\n                                    </mat-select>\\n                                </mat-form-field>\\n                            </div>\\n                            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"p-l-10\\\">\\n                                <mat-form-field>\\n                                    <input matInput [(ngModel)]=\\\"lists.address\\\" placeholder=\\\"Address\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-right\\\">\\n                                <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!lists.name || !lists.address\\\" (click)=\\\"AddBranch()\\\">Save</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Branch List\\\">\\n                <div fxLayout=\\\"row wrap\\\">\\n                    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                        <div fxLayout=\\\"row wrap\\\">\\n                            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                <mat-form-field>\\n                                    <mat-label>Select Admin</mat-label>\\n                                    <mat-select [(ngModel)]=\\\"lists.admin\\\">\\n                                        <mat-option *ngFor=\\\"let u of lists.adminlist\\\" [value]=\\\"u.id\\\">\\n                                            {{u.name}}\\n                                        </mat-option>\\n                                    </mat-select>\\n                                </mat-form-field>\\n                            </div>\\n                            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-right m-b-10\\\">\\n                                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"GetBranchList()\\\">View\\n                                    Branch List</button>\\n                            </div>\\n                            <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                <mat-form-field>\\n                                    <input matInput (keyup)=\\\"common.TableFilter(lists.branchlist,$event.target.value)\\\" placeholder=\\\"Search\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                <table mat-table matSort [dataSource]=\\\"lists.branchlist\\\">\\n                                    <!-- <ng-container matColumnDef=\\\"action\\\">\\n                                        <th mat-header-cell *matHeaderCellDef> Action </th>\\n                                        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n                                            <a>\\n                                                <mat-icon>edit</mat-icon>\\n                                            </a>\\n                                            <a>\\n                                                <mat-icon>delete</mat-icon>\\n                                            </a>\\n                                        </td>\\n                                    </ng-container> -->\\n                                    <ng-container matColumnDef=\\\"name\\\">\\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Branch Name </th>\\n                                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n                                    </ng-container>\\n                                    <ng-container matColumnDef=\\\"address\\\">\\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\\n                                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </td>\\n                                    </ng-container>\\n                                    <ng-container matColumnDef=\\\"admin\\\">\\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Admin Name </th>\\n                                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.admin}} </td>\\n                                    </ng-container>\\n                                    <tr mat-header-row *matHeaderRowDef=\\\"lists.displayedColumns; sticky: true\\\"></tr>\\n                                    <tr mat-row *matRowDef=\\\"let row; columns: lists.displayedColumns;\\\"></tr>\\n                                </table>\\n                                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20,25,50]\\\" showFirstLastButtons></mat-paginator>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n        </mat-tab-group>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \"<mat-card>\\n    <!-- <mat-card-title>Branch Manager</mat-card-title> -->\\n    <mat-card-content>\\n        <!-- <mat-card-title>Create Branch</mat-card-title> -->\\n        <mat-tab-group>\\n            <mat-tab label=\\\"Create Service Provider\\\">\\n                <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\n\\n\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Service Provide Name\\\">\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Service Provide Id\\\">\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                        <!-- <mat-form-field>\\n                             <app-material-file-upload (complete)=\\\"onFileComplete($event)\\\"></app-material-file-upload>                     \\n                              \\n                        </mat-form-field>-->\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n\\n                    </div>\\n\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                        <button mat-raised-button color=\\\"primary\\\" class=\\\"btn-block btn-lg m-t-20 m-b-20\\\" type=\\\"submit\\\">Save</button>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Service Provider List\\\">\\n                <div fxLayout=\\\"row wrap\\\">\\n                    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                        <mat-card>\\n                            <mat-card-content>\\n                                <mat-card-title>Service Provider List</mat-card-title>\\n                                <div fxLayout=\\\"row wrap\\\">\\n\\n                                    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                                        <table mat-table matSort [dataSource]=\\\"lists.servicelist\\\">\\n                                            <ng-container matColumnDef=\\\"action\\\">\\n                                                <th mat-header-cell *matHeaderCellDef> Action </th>\\n                                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n                                                    <a>\\n                                                        <mat-icon>edit</mat-icon>\\n                                                    </a> |\\n                                                    <a>\\n                                                        <mat-icon>delete</mat-icon>\\n                                                    </a>\\n                                                </td>\\n\\n                                            </ng-container>\\n\\n                                            <ng-container matColumnDef=\\\"pname\\\">\\n                                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Service Provider Name </th>\\n                                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.pname}} </td>\\n                                            </ng-container>\\n                                            <ng-container matColumnDef=\\\"sname\\\">\\n                                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Serice Provider ID </th>\\n                                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.sname}} </td>\\n                                            </ng-container>\\n\\n\\n\\n                                            <tr mat-header-row *matHeaderRowDef=\\\"lists.displayedColumns; sticky: true\\\"></tr>\\n                                            <tr mat-row *matRowDef=\\\"let row; columns: lists.displayedColumns;\\\"></tr>\\n                                        </table>\\n                                        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20,25,50]\\\" showFirstLastButtons></mat-paginator>\\n                                    </div>\\n                                </div>\\n                            </mat-card-content>\\n                        </mat-card>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n        </mat-tab-group>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \"<mat-card>\\r\\n    <mat-card-content>\\r\\n        <form [formGroup]=\\\"statusmasform\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\r\\n                <div fxFlex.gt-sm=\\\"80\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n\\r\\n                    <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Status Name\\\" type=\\\"textarea\\\" formControlName=\\\"StatusName\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <p class=\\\"text-danger m-t-0 font-16\\\"\\r\\n                            *ngIf=\\\"statusForm.StatusName.touched && statusForm.StatusName.errors?.pattern\\\">\\r\\n                            Status Name contains only characters.</p>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Status</mat-label>\\r\\n                            <mat-select formControlName=\\\"Status\\\" placeholder=\\\"Select Status\\\" required>\\r\\n                                <mat-option value=\\\"1\\\">Active </mat-option>\\r\\n                                <mat-option value=\\\"0\\\">DeActive </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex.gt-sm=\\\"20\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-center m-t-30\\\">\\r\\n                    <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid == 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"CreateStatusMaster()\\\" [disabled]=\\\"!statusmasform.valid\\\">Save</button>\\r\\n                    <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid > 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"UpdateStatusMaster()\\\" [disabled]=\\\"!statusmasform.valid\\\">Update</button>\\r\\n                    <button mat-raised-button color=\\\"default\\\" (click)=\\\"resetStatusMaster()\\\">Clear</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Search\\\" (keyup)=\\\"applyFilter($event.target.value)\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <table mat-table matSort [dataSource]=\\\"lists.statuslist\\\">\\r\\n                    <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status?'Active':'DeActive'}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"action\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n                            <a>\\r\\n                                <mat-icon style=\\\"color:black\\\" (click)=\\\"EditStatusMaster(element)\\\"><i\\r\\n                                        class=\\\"fa fa-pencil\\\"></i>\\r\\n                                </mat-icon>\\r\\n                            </a>\\r\\n                            <mat-icon class=\\\"m-l-10\\\" style=\\\"color:#E91E63\\\" (click)=\\\"DeleteConfirmation(element)\\\"><i\\r\\n                                    class=\\\"fa fa-trash\\\"></i>\\r\\n                            </mat-icon>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"lists.displayedColumns; sticky: true\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: lists.displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20,25,50]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </mat-card-content>\\r\\n</mat-card>\"","module.exports = \"<mat-card>\\r\\n    <mat-card-content>\\r\\n        <form [formGroup]=\\\"subscrimasterform\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\r\\n                <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Subscription Name\\\" formControlName=\\\"SubscriptionName\\\"\\r\\n                                type=\\\"text\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <p class=\\\"text-danger m-t-0 font-16\\\"\\r\\n                            *ngIf=\\\"subscriForm.SubscriptionName.touched && subscriForm.SubscriptionName.errors?.pattern\\\">\\r\\n                            Subscription Name contains only characters.</p>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"75\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Description\\\" formControlName=\\\"Description\\\" type=\\\"textarea\\\"\\r\\n                                required>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\r\\n                <div fxFlex.gt-sm=\\\"80\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex.gt-sm=\\\"33\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Fee Amount\\\" formControlName=\\\"FeeAmount\\\" type=\\\"number\\\"\\r\\n                                required>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"33\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Validity (in Months)\\\" type=\\\"number\\\"\\r\\n                                formControlName=\\\"validitymonths\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <p class=\\\"text-danger m-t-0 font-16\\\"\\r\\n                            *ngIf=\\\"subscriForm.validitymonths.touched && (subscriForm.validitymonths.errors?.maxLength || subscriForm.validitymonths.errors?.min || subscriForm.validitymonths.errors?.max)\\\">\\r\\n                            Months contains only 2 digits (01-99).</p>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"33\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Status</mat-label>\\r\\n                            <mat-select formControlName=\\\"Status\\\" placeholder=\\\"Select Status\\\" required>\\r\\n                                <mat-option value=\\\"1\\\">Active </mat-option>\\r\\n                                <mat-option value=\\\"0\\\">DeActive </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex.gt-sm=\\\"20\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-center m-t-30\\\">\\r\\n                    <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid == 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"CreateSubscription()\\\" [disabled]=\\\"!subscrimasterform.valid\\\">Save</button>\\r\\n                    <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid > 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"UpdateSubscription()\\\" [disabled]=\\\"!subscrimasterform.valid\\\">Update</button>\\r\\n                    <button mat-raised-button color=\\\"default\\\" (click)=\\\"resetSubscriptionform()\\\">Clear</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Search\\\" (keyup)=\\\"applyFilter($event.target.value)\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <table mat-table matSort [dataSource]=\\\"lists.sublist\\\">\\r\\n                    <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Subscription Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subscription_name}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"desc\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"Amount\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Fee Amount </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amount}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"month\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Period </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.validity}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status?'Active':'DeActive'}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"action\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n                            <a>\\r\\n                                <mat-icon style=\\\"color:black\\\" (click)=\\\"EditSubscriptionMaster(element)\\\"><i\\r\\n                                        class=\\\"fa fa-pencil\\\"></i>\\r\\n                                </mat-icon>\\r\\n                            </a>\\r\\n                            <mat-icon class=\\\"m-l-10\\\" style=\\\"color:#E91E63\\\" (click)=\\\"DeleteConfirmation(element)\\\"><i\\r\\n                                    class=\\\"fa fa-trash\\\"></i>\\r\\n                            </mat-icon>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"lists.displayedColumns; sticky: true\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: lists.displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20,25,50]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </mat-card-content>\\r\\n</mat-card>\"","module.exports = \"<mat-card>\\r\\n    <mat-card-content>\\r\\n        <form [formGroup]=\\\"taxmasterform\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\r\\n                <div fxFlex.gt-sm=\\\"80\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Tax Name \\\" type=\\\"textarea\\\" formControlName=\\\"TaxName\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <p class=\\\"text-danger m-t-0 font-16\\\"\\r\\n                            *ngIf=\\\"taxForm.TaxName.touched && taxForm.TaxName.errors?.pattern\\\">\\r\\n                            Tax Name contains only characters.</p>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Tax Value % \\\" type=\\\"number\\\" formControlName=\\\"TaxValue\\\"\\r\\n                                required>\\r\\n                        </mat-form-field>\\r\\n                        <p class=\\\"text-danger m-t-0 font-16\\\"\\r\\n                            *ngIf=\\\"taxForm.TaxValue.touched && (taxForm.TaxValue.errors?.maxLength || taxForm.TaxValue.errors?.min || taxForm.TaxValue.errors?.max)\\\">\\r\\n                            Tax Value % contains only 2 digits (01-99).</p>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Status</mat-label>\\r\\n                            <mat-select formControlName=\\\"Status\\\" placeholder=\\\"Select Status\\\" required>\\r\\n                                <mat-option value=\\\"1\\\">Active </mat-option>\\r\\n                                <mat-option value=\\\"0\\\">DeActive </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex.gt-sm=\\\"20\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-center m-t-30\\\">\\r\\n                    <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid == 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"CreateTaxMaster()\\\" [disabled]=\\\"!taxmasterform.valid\\\">Save</button>\\r\\n                    <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid > 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"UpdateTaxMaster()\\\" [disabled]=\\\"!taxmasterform.valid\\\">Update</button>\\r\\n                    <button mat-raised-button color=\\\"default\\\" (click)=\\\"resetTaxMaster()\\\">Clear</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Search\\\" (keyup)=\\\"applyFilter($event.target.value)\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <table mat-table matSort [dataSource]=\\\"lists.taxlist\\\">\\r\\n                    <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> TAX name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.tax_name}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"value\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> TAX value % </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.tax_value}} % </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status?'Active':'DeActive'}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"action\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n                            <a>\\r\\n                                <mat-icon style=\\\"color:black\\\" (click)=\\\"EditTaxMaster(element)\\\"><i\\r\\n                                        class=\\\"fa fa-pencil\\\"></i>\\r\\n                                </mat-icon>\\r\\n                            </a>\\r\\n                            <mat-icon class=\\\"m-l-10\\\" style=\\\"color:#E91E63\\\" (click)=\\\"DeleteConfirmation(element)\\\"><i\\r\\n                                    class=\\\"fa fa-trash\\\"></i>\\r\\n                            </mat-icon>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"lists.displayedColumns; sticky: true\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: lists.displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20,25,50]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </mat-card-content>\\r\\n</mat-card>\"","module.exports = \"<mat-card>\\r\\n    <mat-card-content>\\r\\n        <form [formGroup]=\\\"userroleform\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\r\\n                <div fxFlex.gt-sm=\\\"80\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Role Name\\\" type=\\\"textarea\\\" formControlName=\\\"rolename\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <p class=\\\"text-danger m-t-0 font-16\\\" *ngIf=\\\"usrroleForm.rolename.touched && usrroleForm.rolename.errors?.pattern\\\">\\r\\n                            Role Name contains only characters.</p>\\r\\n                    </div>\\r\\n                    <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Role Status</mat-label>\\r\\n                            <mat-select formControlName=\\\"roleStatus\\\" placeholder=\\\"Select Status\\\" required>\\r\\n                                <mat-option value=\\\"1\\\">Active </mat-option>\\r\\n                                <mat-option value=\\\"0\\\">DeActive </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex.gt-sm=\\\"20\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-center m-t-30\\\">\\r\\n                    <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid == 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"CreateUserRole()\\\" [disabled]=\\\"!userroleform.valid\\\">Save</button>\\r\\n                    <button class=\\\"m-r-20\\\" *ngIf=\\\"updateid > 0\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"UpdateUserRoleMaster()\\\" [disabled]=\\\"!userroleform.valid\\\">Update</button>\\r\\n                    <button mat-raised-button color=\\\"default\\\" (click)=\\\"resetuserroleform()\\\">Clear</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n                <table mat-table matSort [dataSource]=\\\"lists.rolelist\\\">\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"rolename\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Role Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"rolestatus\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Role Status </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status?'Active':'DeActive'}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"action\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n                            <a>\\r\\n                                <mat-icon style=\\\"color:black\\\" (click)=\\\"EditUserRoleMaster(element)\\\"><i\\r\\n                                        class=\\\"fa fa-pencil\\\"></i>\\r\\n                                </mat-icon>\\r\\n                            </a>\\r\\n                            <mat-icon class=\\\"m-l-10\\\" style=\\\"color:#E91E63\\\" (click)=\\\"DeleteConfirmation(element)\\\"><i\\r\\n                                    class=\\\"fa fa-trash\\\"></i>\\r\\n                            </mat-icon>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"lists.displayedColumns; sticky: true\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: lists.displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20,25,50]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-card-content>\\r\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9NYXN0ZXIvYXJlYW1hc3Rlci9hcmVhbWFzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormControlName,\r\n} from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { CommonService } from '../../Service/common.service';\r\nimport { MatDialog,MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmboxComponent } from '../../Dailogbox/confirmbox/confirmbox.component';\r\n\r\n@Component({\r\n  selector: 'app-areamaster',\r\n  templateUrl: './areamaster.component.html',\r\n  styleUrls: ['./areamaster.component.css']\r\n})\r\nexport class AreamasterComponent implements OnInit {\r\nlists:any={};\r\nareaform: FormGroup;\r\nupdateid = 0;\r\n@ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  constructor(private fb: FormBuilder,public common:CommonService,public dialog: MatDialog) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.areaform = this.fb.group({\r\n      AreaName: ['', Validators.required],\r\n      Status: ['',Validators.required],\r\n    });\r\n\r\n    this.lists.Arealist = new MatTableDataSource();\r\n    this.lists.displayedColumns = ['name', 'status', 'action'];\r\n    this.lists.Arealist.paginator = this.paginator;\r\n    this.lists.Arealist.sort = this.sort;\r\n    this.GetAreaMaster();\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); \r\n    filterValue = filterValue.toLowerCase(); \r\n    this.lists.Arealist.filter = filterValue;\r\n  }\r\n\r\n  GetAreaMaster(){\r\n    this.common.GetMethod('master/getmaster?master=areamaster').then((res:any)=>{\r\n      if(res.status==1){\r\n        this.lists.Arealist=new MatTableDataSource(res.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  CreateAreaMaster(){\r\n    this.common.PostMethod('master/add',{\r\n      master:'areamaster',\r\n      name:this.areaform.value.AreaName,\r\n      status:this.areaform.value.Status\r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetAreaMaster();\r\n          this.ResetAreaMaster();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  EditAreaMaster(ev){\r\n    this.updateid = ev.id\r\n    this.areaform.controls['AreaName'].setValue(ev.name);\r\n    if(ev.status){\r\n      this.areaform.controls['Status'].setValue('1');\r\n    }else{\r\n      this.areaform.controls['Status'].setValue('0');\r\n    }\r\n  }\r\n  ResetAreaMaster(){\r\n    this.updateid = 0;\r\n    this.areaform.controls['AreaName'].setValue('');\r\n    this.areaform.controls['Status'].setValue('');\r\n  }\r\n\r\n  DeleteConfirmation(ev){\r\n    let dailog = this.common.dialog.open(ConfirmboxComponent,{data:{status:true,Message:\"Are you sure you want to delete this record?\"}});\r\n    dailog.afterClosed().subscribe(data => {\r\n      if (data) {\r\n        this.DeleteAreaMaster(ev.id)\r\n      } \r\n    });  \r\n  }\r\n\r\n  DeleteAreaMaster(_id){\r\n    this.common.PostMethod('master/deletemaster',{\r\n      master:'areamaster',     \r\n      where:{id:_id},  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetAreaMaster();\r\n          this.ResetAreaMaster();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n\r\n  }\r\n\r\n  UpdateAreaMaster(){\r\n  this.common.PostMethod('master/updatemaster',{\r\n    master:'areamaster',\r\n    update:{\r\n    name:this.areaform.value.AreaName,\r\n    status:this.areaform.value.Status,\r\n    },\r\n    where:{id:this.updateid} ,\r\n\r\n  }).then((res:any)=>{\r\n      if(res.status==1){\r\n        this.common.ToastMessage('Success',res.message);\r\n        this.GetAreaMaster();\r\n        this.ResetAreaMaster();\r\n    }else{\r\n    this.common.ToastMessage('Info Error!',res.message);\r\n\r\n    }\r\n  }).catch(y=>{\r\n    this.common.ToastMessage('Info Error!',y.error.message);\r\n  });\r\n}\r\n\r\n  onSubmit(){\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9NYXN0ZXIvY29tcGxhaW5tYXN0ZXIvY29tcGxhaW5tYXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormControlName,\r\n} from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { CommonService } from '../../Service/common.service';\r\nimport { MatDialog,MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmboxComponent } from '../../Dailogbox/confirmbox/confirmbox.component';\r\n\r\n@Component({\r\n  selector: 'app-complainmaster',\r\n  templateUrl: './complainmaster.component.html',\r\n  styleUrls: ['./complainmaster.component.css']\r\n})\r\nexport class ComplainmasterComponent implements OnInit {\r\n  complainmasterform:FormGroup;\r\n  lists:any={};\r\n  updateid = 0;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  constructor(private fb :FormBuilder,public common:CommonService,public dialog: MatDialog) { }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); \r\n    filterValue = filterValue.toLowerCase(); \r\n    this.lists.complist.filter = filterValue;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.complainmasterform = this.fb.group({\r\n      ComplaintType:['', [Validators.required, Validators.pattern('^[a-zA-Z ]+$')]],\r\n      Status : ['', Validators.required],\r\n    });\r\n    \r\n    this.lists.complist = new MatTableDataSource();\r\n    this.lists.displayedColumns = ['ctype', 'status', 'action'];\r\n    this.lists.complist.paginator = this.paginator;\r\n    this.lists.complist.sort = this.sort;\r\n    this.GetComplainMaster();\r\n  }\r\n  get copmplainForm() {\r\n    return this.complainmasterform.controls;\r\n  }\r\n\r\n  GetComplainMaster(){\r\n    this.common.GetMethod('master/getmaster?master=complaintmaster').then((res:any)=>{\r\n      if(res.status==1){\r\n        this.lists.complist=new MatTableDataSource(res.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  CreateComplainMaster(){\r\n    this.common.PostMethod('master/add',{\r\n      master:'complaintmaster',\r\n      complaint_name:this.complainmasterform.value.ComplaintType,\r\n      status:this.complainmasterform.value.Status,     \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetComplainMaster();\r\n          this.resetComplainMaster();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  UpdateComplainMaster(){\r\n    this.common.PostMethod('master/updatemaster',{\r\n      master:'complaintmaster',\r\n      update:{\r\n        complaint_name:this.complainmasterform.value.ComplaintType,\r\n        status:this.complainmasterform.value.Status, \r\n      },\r\n      where:{id:this.updateid} ,  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetComplainMaster();\r\n          this.resetComplainMaster();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  resetComplainMaster(){\r\n    this.updateid = 0;\r\n    this.complainmasterform.controls['ComplaintType'].setValue('');\r\n    this.complainmasterform.controls['Status'].setValue('');\r\n  }\r\n\r\n  EditComplainMaster(ev){\r\n    this.updateid = ev.id;\r\n    this.complainmasterform.controls['ComplaintType'].setValue(ev.complaint_name);\r\n    if(ev.status){\r\n      this.complainmasterform.controls['Status'].setValue('1');\r\n    }else{\r\n      this.complainmasterform.controls['Status'].setValue('0');\r\n    }\r\n  }\r\n\r\n  DeleteConfirmation(ev){\r\n    let dailog = this.common.dialog.open(ConfirmboxComponent,{data:{status:true,Message:\"Are you sure you want to delete this record?\"}});\r\n    dailog.afterClosed().subscribe(data => {\r\n      if (data) {\r\n        this.DeleteComplainMaster(ev.id)\r\n      } \r\n    });  \r\n  }\r\n\r\n  DeleteComplainMaster(_id){ \r\n    this.common.PostMethod('master/deletemaster',{\r\n      master:'complaintmaster',     \r\n      where:{id:_id},  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetComplainMaster();\r\n          this.resetComplainMaster();\r\n          _id = 0;\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit(){\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9NYXN0ZXIva3ljbWFzdGVyL2t5Y21hc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormControlName,\r\n} from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { CommonService } from '../../Service/common.service';\r\nimport { MatDialog,MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmboxComponent } from '../../Dailogbox/confirmbox/confirmbox.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-kycmaster',\r\n  templateUrl: './kycmaster.component.html',\r\n  styleUrls: ['./kycmaster.component.css']\r\n})\r\nexport class KycmasterComponent implements OnInit {\r\n  lists: any = {};\r\n  kycnasterform: FormGroup;\r\n  updateid = 0 ;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  constructor(private fb: FormBuilder,public common:CommonService,public dialog: MatDialog) { }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); \r\n    filterValue = filterValue.toLowerCase(); \r\n    this.lists.kyclist.filter = filterValue;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.kycnasterform = this.fb.group({\r\n      DocumentName: ['', [Validators.required,Validators.pattern('^[a-zA-Z ]+$')]],\r\n      DocumentType: ['',Validators.required],\r\n      DocumentForm: ['',Validators.required],\r\n      Status: ['',Validators.required],      \r\n    });\r\n\r\n    this.lists.kyclist = new MatTableDataSource();\r\n    this.lists.displayedColumns = ['name', 'Type', 'Form', 'status', 'action'];\r\n    this.lists.kyclist.paginator = this.paginator;\r\n    this.lists.kyclist.sort = this.sort;\r\n    this.GetKYCMaster();\r\n  }\r\n\r\n  get kycForm() {\r\n    return this.kycnasterform.controls;\r\n  }\r\n\r\n GetKYCMaster(){\r\n    this.common.GetMethod('master/getmaster?master=kyctype').then((res:any)=>{\r\n      if(res.status==1){\r\n        this.lists.kyclist=new MatTableDataSource(res.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  resetKycform(){\r\n    this.updateid = 0;\r\n    this.kycnasterform.controls['DocumentName'].setValue('');\r\n    this.kycnasterform.controls['DocumentType'].setValue('');\r\n    this.kycnasterform.controls['DocumentForm'].setValue('');\r\n    this.kycnasterform.controls['Status'].setValue('');\r\n  }\r\n\r\n  CreateKyc(){\r\n    this.common.PostMethod('master/add',{\r\n      master:'kyctype',\r\n      doc_name:this.kycnasterform.value.DocumentName,\r\n      doc_type:this.kycnasterform.value.DocumentType,\r\n      form_id:this.kycnasterform.value.DocumentForm,\r\n      status:this.kycnasterform.value.Status,\r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetKYCMaster();\r\n          this.resetKycform();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n  \r\n\r\n  EditKycMaster(ev){\r\n    this.updateid = ev.id\r\n    this.kycnasterform.controls['DocumentName'].setValue(ev.doc_name);\r\n    if(ev.status){\r\n      this.kycnasterform.controls['Status'].setValue('1');\r\n    }else{\r\n      this.kycnasterform.controls['Status'].setValue('0');\r\n    }   \r\n    if(ev.form_id == 0){\r\n      this.kycnasterform.controls['DocumentForm'].setValue('0');\r\n    }else{\r\n      this.kycnasterform.controls['DocumentForm'].setValue('1');\r\n    }\r\n    if(ev.doc_type == 0 ){\r\n      this.kycnasterform.controls['DocumentType'].setValue('0');\r\n    }else{\r\n      this.kycnasterform.controls['DocumentType'].setValue('1');\r\n    }    \r\n  }\r\n\r\n  UpdateKycMaster(){\r\n    this.common.PostMethod('master/updatemaster',{\r\n      master:'kyctype',\r\n      update:{\r\n        doc_name:this.kycnasterform.value.DocumentName,\r\n        form_id:this.kycnasterform.value.DocumentForm,\r\n        doc_type:this.kycnasterform.value.DocumentType,\r\n        status:this.kycnasterform.value.Status,\r\n      },\r\n      where:{id:this.updateid} ,  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetKYCMaster();\r\n          this.resetKycform();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  DeleteConfirmation(ev){\r\n    let dailog = this.common.dialog.open(ConfirmboxComponent,{data:{status:true,Message:\"Are you sure you want to delete this record?\"}});\r\n    dailog.afterClosed().subscribe(data => {\r\n      if (data) {\r\n        this.DeleteKycMaster(ev.id)\r\n      } \r\n    });  \r\n  }\r\n\r\n  DeleteKycMaster(_id){\r\n    this.common.PostMethod('master/deletemaster',{\r\n      master:'kyctype',     \r\n      where:{id:_id},  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetKYCMaster();\r\n          this.resetKycform();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit(){  \r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { DemoMaterialModule } from '../../demo-material-module';\r\n\r\nimport { MasterRoutes } from './master.routing';\r\nimport { MastermanagerComponent } from './mastermanager/mastermanager.component';\nimport { ServicemasterComponent } from './servicemaster/servicemaster.component';\nimport { AreamasterComponent } from './areamaster/areamaster.component';\nimport { UserrolemasterComponent } from './userrolemaster/userrolemaster.component';\nimport { KycmasterComponent } from './kycmaster/kycmaster.component';\nimport { SubscriptionmasterComponent } from './subscriptionmaster/subscriptionmaster.component';\nimport { TaxmasterComponent } from './taxmaster/taxmaster.component';\nimport { ComplainmasterComponent } from './complainmaster/complainmaster.component';\nimport { StatusmasterComponent } from './statusmaster/statusmaster.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(MasterRoutes),\r\n    DemoMaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    \r\n  ],\r\n  declarations: [\r\n   MastermanagerComponent,\r\n   ServicemasterComponent,\r\n   AreamasterComponent,\r\n   UserrolemasterComponent,\r\n   KycmasterComponent,\r\n   SubscriptionmasterComponent,\r\n   TaxmasterComponent,\r\n   ComplainmasterComponent,\r\n   StatusmasterComponent,\r\n  ]\r\n})\r\nexport class MasterModule {}\r\n","import { Routes } from '@angular/router';\r\nimport { AreamasterComponent } from './areamaster/areamaster.component';\r\nimport { ComplainmasterComponent } from './complainmaster/complainmaster.component';\r\nimport { KycmasterComponent } from './kycmaster/kycmaster.component';\r\nimport { MastermanagerComponent } from './mastermanager/mastermanager.component';\r\nimport { ServicemasterComponent } from './servicemaster/servicemaster.component';\r\nimport { StatusmasterComponent } from './statusmaster/statusmaster.component';\r\nimport { SubscriptionmasterComponent } from './subscriptionmaster/subscriptionmaster.component';\r\nimport { TaxmasterComponent } from './taxmaster/taxmaster.component';\r\nimport { UserrolemasterComponent } from './userrolemaster/userrolemaster.component';\r\n\r\n\r\nexport const MasterRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'mastermanager',\r\n        component: MastermanagerComponent,\r\n\t\tdata: {\r\n          title: 'Master Manager',\r\n          urls: [\r\n            { title: 'Dashboard', url: '/dashboard' },\r\n            { title: 'Master Manager' }\r\n          ]\r\n                          }\r\n      }, \r\n\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'servicemaster',\r\n        component: ServicemasterComponent,\r\n    data:\r\n     {\r\n          title: 'Service Master',\r\n          urls: [\r\n            { title: 'Dashboard', url: '/dashboard' },\r\n            { title: 'Service Master' }\r\n          ]\r\n          \r\n        }\r\n      }\r\n    \r\n      \r\n  ]\r\n},\r\n\r\n{\r\n  path: '',\r\n  children: [\r\n    {\r\n      path: 'areamaster',\r\n      component: AreamasterComponent,\r\n  data:\r\n   {\r\n        title: 'Area Master',\r\n        urls: [\r\n          { title: 'Dashboard', url: '/dashboard' },\r\n          { title: 'Area Master' }\r\n        ]\r\n        \r\n      }\r\n    }\r\n  \r\n    \r\n]\r\n},\r\n{\r\n  path: '',\r\n  children: [\r\n    {\r\n      path: 'complainmaster',\r\n      component: ComplainmasterComponent,\r\n  data:\r\n   {\r\n        title: 'Complain Master',\r\n        urls: [\r\n          { title: 'Dashboard', url: '/dashboard' },\r\n          { title: 'Complain Master' }\r\n        ]\r\n        \r\n      }\r\n    }\r\n  \r\n    \r\n]\r\n},\r\n{\r\n  path: '',\r\n  children: [\r\n    {\r\n      path: 'subscriptionmaster',\r\n      component: SubscriptionmasterComponent,\r\n  data:\r\n   {\r\n        title: 'Subscription Master',\r\n        urls: [\r\n          { title: 'Dashboard', url: '/dashboard' },\r\n          { title: 'Subscription Master' }\r\n        ]\r\n        \r\n      }\r\n    }\r\n  \r\n    \r\n]\r\n},\r\n{\r\n  path: '',\r\n  children: [\r\n    {\r\n      path: 'taxmaster',\r\n      component: TaxmasterComponent,\r\n  data:\r\n   {\r\n        title: 'TAX Master',\r\n        urls: [\r\n          { title: 'Dashboard', url: '/dashboard' },\r\n          { title: 'TAX Master' }\r\n        ]\r\n        \r\n      }\r\n    }\r\n  \r\n    \r\n]\r\n},\r\n{\r\n  path: '',\r\n  children: [\r\n    {\r\n      path: 'userrolemaster',\r\n      component: UserrolemasterComponent,\r\n  data:\r\n   {\r\n        title: 'User Role Master',\r\n        urls: [\r\n          { title: 'Dashboard', url: '/dashboard' },\r\n          { title: 'UserRole Master' }\r\n        ]\r\n        \r\n      }\r\n    }\r\n  \r\n    \r\n]\r\n}  ,\r\n{\r\n  path: '',\r\n  children: [\r\n    {\r\n      path: 'kycmaster',\r\n      component: KycmasterComponent,\r\n  data:\r\n   {\r\n        title: 'KYC Master',\r\n        urls: [\r\n          { title: 'Dashboard', url: '/dashboard' },\r\n          { title: 'KYC Master' }\r\n        ]\r\n        \r\n      }\r\n    }\r\n  \r\n    \r\n]\r\n} ,{\r\n  path: '',\r\n  children: [\r\n    {\r\n      path: 'statusmaster',\r\n      component: StatusmasterComponent,\r\n  data:\r\n   {\r\n        title: 'Status Master',\r\n        urls: [\r\n          { title: 'Dashboard', url: '/dashboard' },\r\n          { title: 'Status Master' }\r\n        ]\r\n        \r\n      }\r\n    }\r\n  \r\n    \r\n]\r\n}  \r\n];\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9NYXN0ZXIvbWFzdGVybWFuYWdlci9tYXN0ZXJtYW5hZ2VyLmNvbXBvbmVudC5jc3MifQ== */\"","import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { CommonService } from '../../Service/common.service';\nimport * as moment from \"moment\";\n\n@Component({\n  selector: 'app-mastermanager',\n  templateUrl: './mastermanager.component.html',\n  styleUrls: ['./mastermanager.component.css']\n})\nexport class MastermanagerComponent implements OnInit {\n  hide = true;\n  lists:any={};\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  constructor(public common: CommonService, public fb: FormBuilder) { \n  this.InitFun();\n  this.lists.branchlist = [];\n  this.lists.UserTab = \"UserList\";\n  this.lists.UserType = localStorage.getItem(\"UserType\");\n  this.GetBranchList();\n  this.GetCitylist();\n  this.GetAdminList();\n  }\n\n  ngOnInit() {\n    // this.lists.Branchlist.paginator = this.paginator;\n    // this.lists.Branchlist.sort  = this.sort;\n    this.lists.branchlist.paginator = this.paginator;\n    this.lists.branchlist.sort = this.sort;\n  }\n    InitFun()\n    {\n    this.lists.Branchlist = new MatTableDataSource();\n    this.lists.displayedColumns = [ 'name', 'address', 'admin'];\n  \n  }\n  \n  \n  applyFilter(filterValue: string) {\n    this.lists.Branchlist.filter = filterValue.trim().toLowerCase();\n  }\n\n  AddBranch() {\n    this.common.PostMethod(\"AddBranch\", { name: this.lists.name, address: this.lists.address, userid: localStorage.getItem(\"UserId\"), usertype: localStorage.getItem(\"UserType\") }).then((res: any) => {\n      if (res.Status == 1) {\n        this.common.ToastMessage(\"Success\", res.Message);\n        this.GetBranchList()\n        this.lists.name = \"\";\n        this.lists.address = \"\";\n      } else {\n        this.common.ToastMessage(\"Fail\", res.Message);\n\n      }\n    }).catch();\n  }\n\n  GetBranchList() {\n    \n    let userid: any = localStorage.getItem(\"UserId\");\n    if (localStorage.getItem(\"UserType\") == 'Super Admin') {\n      userid = 0;\n    }\n    if (this.lists.admin) {\n      userid = this.lists.admin;\n    }\n    this.common.GetMethod(\"GetBranchlist?userid=\" + userid).then((res: any) => {      \n      this.lists.branchlist = new MatTableDataSource(res.Data);\n      this.lists.branchlist.paginator = this.paginator;\n      this.lists.branchlist.sort = this.sort;\n    });\n      \n    \n  }\n  GetAdminList() {\n    this.common.PostMethod(\"GetfilterData\", { file: \"users\", name: \"usertype\", value: 'Admin' }).then((res: any) => {\n      this.lists.adminlist = res.Data;\n    }).catch(y => {\n      console.log(y);\n    });\n  }\n  GetCitylist() {\n    this.common.GetMethod('GetCitites').then((res: any) => {\n      this.lists.Citylist = res.Data;\n    }).catch();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9NYXN0ZXIvc2VydmljZW1hc3Rlci9zZXJ2aWNlbWFzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\n\n\n@Component({\n  selector: 'app-servicemaster',\n  templateUrl: './servicemaster.component.html',\n  styleUrls: ['./servicemaster.component.css']\n})\nexport class ServicemasterComponent implements OnInit {\n  hide = true;\n  lists:any={};\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor() {\n    this.InitFun();\n  this.GetServiceList();\n   }\n\n   ngOnInit() {\n    this.lists.Servicelist.paginator = this.paginator;\n    this.lists.Servicelist.sort  = this.sort;\n\n  }\n    InitFun()\n    {\n    this.lists.Servicelist = new MatTableDataSource();\n    this.lists.Servicelist = new MatTableDataSource([{name: 'Shubham', Branchname: 'abc'},{name: 'Shubham', Branchname: 'abc'}])\n    this.lists.displayedColumns = ['sname', 'pname'];\n  }\n  GetServiceList(){\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9NYXN0ZXIvc3RhdHVzbWFzdGVyL3N0YXR1c21hc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormControlName,\r\n} from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { CommonService } from '../../Service/common.service';\r\nimport { MatDialog,MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmboxComponent } from '../../Dailogbox/confirmbox/confirmbox.component';\r\n\r\n@Component({\r\n  selector: 'app-statusmaster',\r\n  templateUrl: './statusmaster.component.html',\r\n  styleUrls: ['./statusmaster.component.css']\r\n})\r\nexport class StatusmasterComponent implements OnInit {\r\n  lists:any={};\r\n  statusmasform: FormGroup;\r\n  updateid = 0;\r\n@ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  constructor(private fb: FormBuilder,public common:CommonService, public dialog: MatDialog) {\r\n   }\r\n\r\n   applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); \r\n    filterValue = filterValue.toLowerCase(); \r\n    this.lists.statuslist.filter = filterValue;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.statusmasform = this.fb.group({\r\n      StatusName: ['', [Validators.required, Validators.pattern('^[a-zA-Z ]+$')]],\r\n      Status: ['',Validators.required],\r\n    });\r\n\r\n    this.lists.statuslist = new MatTableDataSource();\r\n    this.lists.displayedColumns = ['name', 'status', 'action'];\r\n    this.lists.statuslist.paginator = this.paginator;\r\n    this.lists.statuslist.sort = this.sort;\r\n    this.GetStatusMaster();\r\n  }\r\n\r\n  get statusForm() {\r\n    return this.statusmasform.controls;\r\n  }\r\n  \r\n  GetStatusMaster(){\r\n    this.common.GetMethod('master/getmaster?master=statustype').then((res:any)=>{\r\n      if(res.status==1){\r\n        this.lists.statuslist=new MatTableDataSource(res.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  resetStatusMaster(){\r\n    this.updateid = 0;\r\n    this.statusmasform.controls['StatusName'].setValue('');\r\n    this.statusmasform.controls['Status'].setValue('');\r\n  }\r\n\r\n\r\n  CreateStatusMaster(){\r\n    this.common.PostMethod('master/add',{\r\n      master:'statustype',\r\n      name:this.statusmasform.value.StatusName,\r\n      status:this.statusmasform.value.Status,     \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetStatusMaster();\r\n          this.resetStatusMaster();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  EditStatusMaster(ev){\r\n    this.updateid = ev.id;\r\n    this.statusmasform.controls['StatusName'].setValue(ev.name);\r\n    if(ev.status){\r\n      this.statusmasform.controls['Status'].setValue('1');\r\n    }else{\r\n      this.statusmasform.controls['Status'].setValue('0');\r\n    }\r\n  }\r\n\r\n  UpdateStatusMaster(){\r\n    this.common.PostMethod('master/updatemaster',{\r\n      master:'statustype',\r\n      update:{\r\n        name:this.statusmasform.value.StatusName,\r\n        status:this.statusmasform.value.Status, \r\n      },\r\n      where:{id:this.updateid} ,  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetStatusMaster();\r\n          this.resetStatusMaster();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  DeleteConfirmation(ev){\r\n    let dailog = this.common.dialog.open(ConfirmboxComponent,{data:{status:true,Message:'Are you sure you want to delete this record?'}});\r\n    dailog.afterClosed().subscribe(data => {\r\n      if (data) {\r\n        this.DeleteStatusMaster(ev.id)\r\n      } \r\n    });  \r\n    }\r\n\r\n  DeleteStatusMaster(_id){\r\n    this.common.PostMethod('master/deletemaster',{\r\n      master:'statustype',     \r\n      where:{id:_id},  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetStatusMaster();\r\n          this.resetStatusMaster();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  onSubmit(){\r\n\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9NYXN0ZXIvc3Vic2NyaXB0aW9ubWFzdGVyL3N1YnNjcmlwdGlvbm1hc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormControlName,\r\n} from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { CommonService } from '../../Service/common.service';\r\nimport { MatDialog,MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmboxComponent } from '../../Dailogbox/confirmbox/confirmbox.component';\r\n\r\n@Component({\r\n  selector: 'app-subscriptionmaster',\r\n  templateUrl: './subscriptionmaster.component.html',\r\n  styleUrls: ['./subscriptionmaster.component.css']\r\n})\r\nexport class SubscriptionmasterComponent implements OnInit {\r\n  lists: any = {};\r\n  subscrimasterform: FormGroup;\r\n  updateid = 0;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  constructor(private fb: FormBuilder,public common:CommonService,public dialog: MatDialog) { }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); \r\n    filterValue = filterValue.toLowerCase(); \r\n    this.lists.sublist.filter = filterValue;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscrimasterform = this.fb.group({\r\n      SubscriptionName: ['', [Validators.required, Validators.pattern('^[a-zA-Z ]+$')]],\r\n      Description: ['', Validators.required],\r\n      FeeAmount: ['', Validators.required],\r\n      validitymonths: ['', [Validators.required, Validators.maxLength(2), Validators.min(1), Validators.max(99)]],\r\n      Status: ['', Validators.required],\r\n    });\r\n\r\n    this.lists.sublist = new MatTableDataSource();\r\n    this.lists.displayedColumns = ['name', 'desc','Amount','month', 'status', 'action'];\r\n    this.lists.sublist.paginator = this.paginator;\r\n    this.lists.sublist.sort = this.sort;\r\n    this.GetSubscriptionMaster();\r\n  }\r\n\r\n  get subscriForm() {\r\n    return this.subscrimasterform.controls;\r\n  }\r\n\r\n  GetSubscriptionMaster(){\r\n    this.common.GetMethod('master/getmaster?master=subscriptionmaster').then((res:any)=>{\r\n      if(res.status==1){\r\n        this.lists.sublist=new MatTableDataSource(res.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  resetSubscriptionform(){\r\n    this.updateid = 0;\r\n    this.subscrimasterform.controls['SubscriptionName'].setValue('');\r\n    this.subscrimasterform.controls['Description'].setValue('');\r\n    this.subscrimasterform.controls['FeeAmount'].setValue('');    \r\n    this.subscrimasterform.controls['validitymonths'].setValue('');\r\n    this.subscrimasterform.controls['Status'].setValue('');\r\n  }\r\n\r\n  CreateSubscription(){\r\n    this.common.PostMethod('master/add',{\r\n      master:'subscriptionmaster',\r\n      subscription_name:this.subscrimasterform.value.SubscriptionName,\r\n      description:this.subscrimasterform.value.Description,\r\n      amount: this.subscrimasterform.value.FeeAmount,\r\n      validity:this.subscrimasterform.value.validitymonths,\r\n      status:this.subscrimasterform.value.Status,\r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetSubscriptionMaster();\r\n          this.resetSubscriptionform();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  EditSubscriptionMaster(ev){\r\n    this.updateid = ev.id\r\n    this.subscrimasterform.controls['SubscriptionName'].setValue(ev.subscription_name);\r\n    this.subscrimasterform.controls['Description'].setValue(ev.description);\r\n    this.subscrimasterform.controls['FeeAmount'].setValue(ev.amount);\r\n    this.subscrimasterform.controls['validitymonths'].setValue(ev.validity);\r\n    if(ev.status){\r\n      this.subscrimasterform.controls['Status'].setValue('1');\r\n    }else{\r\n      this.subscrimasterform.controls['Status'].setValue('0');\r\n    } \r\n  }\r\n\r\n\r\n  UpdateSubscription(){\r\n    this.common.PostMethod('master/updatemaster',{\r\n      master:'subscriptionmaster',\r\n      update:{\r\n        subscription_name:this.subscrimasterform.value.SubscriptionName,\r\n        description:this.subscrimasterform.value.Description,\r\n        amount:this.subscrimasterform.value.FeeAmount,\r\n        validity:this.subscrimasterform.value.validitymonths,\r\n        status:this.subscrimasterform.value.Status,\r\n      },\r\n      where:{id:this.updateid} ,  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetSubscriptionMaster();\r\n          this.resetSubscriptionform();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  DeleteConfirmation(ev){\r\n    let dailog = this.common.dialog.open(ConfirmboxComponent,{data:{status:true,Message:\"Are you sure you want to delete this record?\"}});\r\n    dailog.afterClosed().subscribe(data => {\r\n      if (data) {\r\n        this.DeleteSubscriptionMaster(ev.id)\r\n      } \r\n    });  \r\n  }\r\n\r\nDeleteSubscriptionMaster(_id){\r\n  this.common.PostMethod('master/deletemaster',{\r\n    master:'subscriptionmaster',     \r\n    where:{id:_id},  \r\n  }).then((res:any)=>{\r\n      if(res.status==1){\r\n        this.common.ToastMessage('Success',res.message);\r\n        this.GetSubscriptionMaster();\r\n          this.resetSubscriptionform();\r\n    }else{\r\n    this.common.ToastMessage('Info Error!',res.message);\r\n\r\n    }\r\n  }).catch(y=>{\r\n    this.common.ToastMessage('Info Error!',y.error.message);\r\n  });\r\n}\r\n\r\n  onSubmit() {\r\n   \r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9NYXN0ZXIvdGF4bWFzdGVyL3RheG1hc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormControlName,\r\n} from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { CommonService } from '../../Service/common.service';\r\nimport { MatDialog,MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmboxComponent } from '../../Dailogbox/confirmbox/confirmbox.component';\r\n\r\n@Component({\r\n  selector: 'app-taxmaster',\r\n  templateUrl: './taxmaster.component.html',\r\n  styleUrls: ['./taxmaster.component.css']\r\n})\r\nexport class TaxmasterComponent implements OnInit {\r\n  lists:any={};\r\n  taxmasterform : FormGroup;\r\n  updateid = 0;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  constructor(private fb : FormBuilder,public common:CommonService,public dialog: MatDialog) { }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); \r\n    filterValue = filterValue.toLowerCase(); \r\n    this.lists.taxlist.filter = filterValue;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.taxmasterform = this.fb.group({\r\n      TaxName : ['', [Validators.required, Validators.pattern('^[a-zA-Z ]+$')]],\r\n      TaxValue : ['', [Validators.required, Validators.maxLength(2), Validators.min(1), Validators.max(99)]],\r\n      Status : ['', Validators.required],\r\n    });\r\n\r\n    this.lists.taxlist = new MatTableDataSource();\r\n    this.lists.displayedColumns = ['name', 'value','status', 'action'];\r\n    this.lists.taxlist.paginator = this.paginator;\r\n    this.lists.taxlist.sort = this.sort;\r\n    this.GetTaxMaster();\r\n  }\r\n\r\n  get taxForm() {\r\n    return this.taxmasterform.controls;\r\n  }\r\n\r\n  GetTaxMaster(){\r\n    this.common.GetMethod('master/getmaster?master=taxmaster').then((res:any)=>{\r\n      if(res.status==1){\r\n        this.lists.taxlist=new MatTableDataSource(res.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  resetTaxMaster(){\r\n    this.updateid = 0;\r\n    this.taxmasterform.controls['TaxName'].setValue('');\r\n    this.taxmasterform.controls['TaxValue'].setValue('');\r\n    this.taxmasterform.controls['Status'].setValue('');\r\n  }\r\n\r\n  CreateTaxMaster(){\r\n    this.common.PostMethod('master/add',{\r\n      master:'taxmaster',\r\n      tax_name:this.taxmasterform.value.TaxName,\r\n      tax_value:this.taxmasterform.value.TaxValue,\r\n      status:this.taxmasterform.value.Status,     \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetTaxMaster();\r\n          this.resetTaxMaster();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  EditTaxMaster(ev){\r\n    this.updateid = ev.id;\r\n    this.taxmasterform.controls['TaxName'].setValue(ev.tax_name);\r\n    this.taxmasterform.controls['TaxValue'].setValue(ev.tax_value);\r\n    if(ev.status){\r\n      this.taxmasterform.controls['Status'].setValue('1');\r\n    }else{\r\n      this.taxmasterform.controls['Status'].setValue('0');\r\n    }\r\n  }\r\n\r\n  UpdateTaxMaster(){\r\n    this.common.PostMethod('master/updatemaster',{\r\n      master:'taxmaster',\r\n      update:{\r\n        tax_name:this.taxmasterform.value.TaxName,\r\n        tax_value:this.taxmasterform.value.TaxValue,\r\n        status:this.taxmasterform.value.Status,   \r\n      },\r\n      where:{id:this.updateid} ,  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetTaxMaster();\r\n          this.resetTaxMaster();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n\r\n  }\r\n\r\n  DeleteConfirmation(ev){\r\n    let dailog = this.common.dialog.open(ConfirmboxComponent,{data:{status:true,Message:\"Are you sure you want to delete this record?\"}});\r\n    dailog.afterClosed().subscribe(data => {\r\n      if (data) {\r\n        this.DeleteTaxMaster(ev.id)\r\n      } \r\n    });  \r\n  }\r\n\r\n  DeleteTaxMaster(_id){\r\n    this.common.PostMethod('master/deletemaster',{\r\n      master:'taxmaster',     \r\n      where:{id:_id},  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetTaxMaster();\r\n          this.resetTaxMaster();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n   \r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9NYXN0ZXIvdXNlcnJvbGVtYXN0ZXIvdXNlcnJvbGVtYXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormControlName,\r\n} from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { CommonService } from '../../Service/common.service';\r\nimport { MatDialog,MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ConfirmboxComponent } from '../../Dailogbox/confirmbox/confirmbox.component';\r\n\r\n@Component({\r\n  selector: 'app-userrolemaster',\r\n  templateUrl: './userrolemaster.component.html',\r\n  styleUrls: ['./userrolemaster.component.css']\r\n})\r\nexport class UserrolemasterComponent implements OnInit {\r\n  lists:any={};\r\n  userroleform : FormGroup;\r\n  updateid = 0;\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  constructor(private fb: FormBuilder,public common:CommonService,public dialog: MatDialog) { }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); \r\n    filterValue = filterValue.toLowerCase(); \r\n    this.lists.rolelist.filter = filterValue;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userroleform = this.fb.group({\r\n      rolename: ['', [Validators.required,Validators.pattern('^[a-zA-Z ]+$')]],\r\n      roleStatus: ['',Validators.required],\r\n    });\r\n\r\n    this.lists.rolelist = new MatTableDataSource();\r\n  this.lists.displayedColumns = [ 'rolename', 'rolestatus', 'action'];\r\n  this.lists.rolelist.paginator = this.paginator;\r\n  this.lists.rolelist.sort = this.sort;\r\n  this.GetRoleMaster();\r\n  }\r\n  \r\n  get usrroleForm() {\r\n    return this.userroleform.controls;\r\n  }\r\n\r\n  GetRoleMaster(){\r\n    this.common.GetMethod('master/getmaster?master=role').then((res:any)=>{\r\n      if(res.status==1){\r\n        this.lists.rolelist=new MatTableDataSource(res.data);\r\n      }\r\n    });\r\n  }\r\n   \r\n  CreateUserRole(){\r\n    this.common.PostMethod('master/add',{\r\n      master:'role',\r\n      name:this.userroleform.value.rolename,\r\n      status:this.userroleform.value.roleStatus\r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetRoleMaster();\r\n          this.resetuserroleform();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n\r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n  }\r\n\r\n  EditUserRoleMaster(ev){\r\n    this.updateid = ev.id\r\n    this.userroleform.controls['rolename'].setValue(ev.name);\r\n    if(ev.status){\r\n      this.userroleform.controls['roleStatus'].setValue('1');\r\n    }else{\r\n      this.userroleform.controls['roleStatus'].setValue('0');\r\n    }\r\n  }\r\n\r\n  UpdateUserRoleMaster(){   \r\n   this.common.PostMethod('master/updatemaster',{\r\n    master:'role',\r\n    update:{\r\n    name:this.userroleform.value.rolename,\r\n    status:this.userroleform.value.roleStatus,\r\n    },\r\n    where:{id:this.updateid} ,\r\n\r\n  }).then((res:any)=>{\r\n      if(res.status==1){\r\n        this.common.ToastMessage('Success',res.message);\r\n        this.GetRoleMaster();\r\n        this.resetuserroleform();\r\n    }else{\r\n    this.common.ToastMessage('Info Error!',res.message);\r\n\r\n    }\r\n  }).catch(y=>{\r\n    this.common.ToastMessage('Info Error!',y.error.message);\r\n  });\r\n  }\r\n\r\n  resetuserroleform(){\r\n    this.updateid = 0;\r\n    this.userroleform.controls['rolename'].setValue('');\r\n    this.userroleform.controls['roleStatus'].setValue('');\r\n  }\r\n\r\n  DeleteConfirmation(ev){\r\n    let dailog = this.common.dialog.open(ConfirmboxComponent,{data:{status:true,Message:\"Are you sure you want to delete this record?\"}});\r\n    dailog.afterClosed().subscribe(data => {\r\n      if (data) {\r\n        this.DeleteUserRoleMaster(ev.id)\r\n      } \r\n    });  \r\n  }\r\n\r\n  DeleteUserRoleMaster(_id){\r\n    this.common.PostMethod('master/deletemaster',{\r\n      master:'role',     \r\n      where:{id:_id},  \r\n    }).then((res:any)=>{\r\n        if(res.status==1){\r\n          this.common.ToastMessage('Success',res.message);\r\n          this.GetRoleMaster();\r\n          this.resetuserroleform();\r\n      }else{\r\n      this.common.ToastMessage('Info Error!',res.message);\r\n  \r\n      }\r\n    }).catch(y=>{\r\n      this.common.ToastMessage('Info Error!',y.error.message);\r\n    });\r\n\r\n  }\r\n  onSubmit(){\r\n\r\n  }\r\n}\r\n"],"sourceRoot":""}