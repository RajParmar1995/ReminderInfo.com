{"version":3,"sources":["webpack:///./src/app/Portal/Workmanager/mywork/mywork.component.html","webpack:///./src/app/Portal/Workmanager/setting/setting.component.html","webpack:///./src/app/Portal/Workmanager/workassign/workassign.component.html","webpack:///./src/app/Portal/Workmanager/mywork/mywork.component.css","webpack:///./src/app/Portal/Workmanager/mywork/mywork.component.ts","webpack:///./src/app/Portal/Workmanager/setting/setting.component.css","webpack:///./src/app/Portal/Workmanager/setting/setting.component.ts","webpack:///./src/app/Portal/Workmanager/workassign/workassign.component.css","webpack:///./src/app/Portal/Workmanager/workassign/workassign.component.ts","webpack:///./src/app/Portal/Workmanager/workmanager.module.ts","webpack:///./src/app/Portal/Workmanager/workmanager.routing.ts"],"names":[],"mappings":"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","file":"Portal-Workmanager-workmanager-module-es5.js","sourcesContent":["module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <form [formGroup]=\\\"myworkform\\\">\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\n                <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <mat-label>KNo:<span style=\\\"color:#1e88e5; font-weight :bold;\\\"> {{manage.kno}}</span></mat-label>\\n                </div>\\n\\n                <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <mat-label>Customer Name:<span style=\\\"color:#1e88e5; font-weight :bold;\\\"> {{manage.cname}}</span>\\n                    </mat-label>\\n                </div>\\n                <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <mat-label>Amount:<span style=\\\"color:#4caf50; font-weight :bold;\\\"> ₹ {{manage.billamount}}</span>\\n                    </mat-label>\\n                </div>\\n                <div fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <mat-label>Due Date:<span style=\\\"color:#1e88e5; font-weight :bold;\\\"> {{manage.lastdate}}</span>\\n                    </mat-label>\\n                </div>\\n            </div>\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\n                <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <mat-form-field>\\n                        <mat-label>Transaction Status</mat-label>\\n                        <mat-select formControlName=\\\"transstatus\\\" [(ngModel)]=\\\"lists.transtype\\\">\\n                            <mat-option *ngFor=\\\"let u of lists.TransTypelist\\\" [value]=\\\"u.name\\\">\\n                                {{u.name}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <mat-form-field>\\n                        <input matInput placeholder=\\\"Transaction\\\" Id type=\\\"number\\\" formControlName=\\\"transid\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-right\\\">\\n                    <button mat-raised-button color=\\\"primary\\\" class=\\\"\\\" type=\\\"submit\\\" [disabled]=\\\"!myworkform.valid\\\"\\n                        (click)=\\\"Save()\\\">Submit</button>\\n                </div>\\n            </div>\\n        </form>\\n        <h2 text-center class=\\\"text-center\\\" style=\\\"color:red\\\" *ngIf=\\\"!myworkform.value.receiptid\\\">Work Completed Or No\\n            Work Assined to\\n            You.</h2>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <mat-slide-toggle (toggleChange)=\\\"ChangeApiStatus($event)\\\" [(ngModel)]=\\\"lists.changesetting\\\" [checked]=\\\"lists.settingvalue\\\"\\n            >Switch API Mode</mat-slide-toggle>\\n            <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">          \\n\\n                \\n            </div>\\n        <!-- <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">            \\n\\n            <a href=\\\"javascript:void\\\">\\n                <mat-card class=\\\"bg-warning text-white text-center\\\">\\n                    <div class=\\\"p-10\\\">\\n                        <h2 class=\\\"m-0\\\"><i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"> </i>\\n                        </h2>\\n                        <small>Total No. of Hits</small>\\n                    </div>\\n                </mat-card>\\n            </a>\\n        </div> -->\\n        <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">          \\n\\n                \\n        </div>\\n        \\n    </mat-card-content>\\n</mat-card>\"","module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <div fxLayout=\\\"row wrap\\\">\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                <div fxLayout=\\\"row wrap\\\">\\n                    <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"p-r-10\\\">\\n                        <mat-form-field>\\n                            <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"lists.from\\\" (focus)=\\\"picker.open()\\\" placeholder=\\\"Choose a Start date\\\">\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #picker></mat-datepicker>\\n                        </mat-form-field>\\n                    </div>\\n\\n                    <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"p-r-10\\\">\\n                        <mat-form-field>\\n                            <input matInput [matDatepicker]=\\\"picker1\\\" [(ngModel)]=\\\"lists.to\\\" (focus)=\\\"picker1.open()\\\" placeholder=\\\"Choose an End date\\\">\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #picker1></mat-datepicker>\\n                        </mat-form-field>\\n                    </div>\\n\\n                    <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"p-r-10\\\">\\n                        <mat-form-field>\\n                            <input matInput [matDatepicker]=\\\"picker2\\\" [(ngModel)]=\\\"lists.duedate\\\" (focus)=\\\"picker2.open()\\\" placeholder=\\\"Choose a Due date\\\">\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #picker2></mat-datepicker>\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" *ngIf=\\\"lists.userType!='Agent'\\\">\\n                        <mat-form-field>\\n                            <mat-label>Select User Name</mat-label>\\n                            <mat-select [(ngModel)]=\\\"lists.agentid\\\">\\n                                <mat-option>\\n                                    <ngx-mat-select-search [(ngModel)]=\\\"lists.searchuser\\\"\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" [placeholderLabel]=\\\"'Search...'\\\"\\n                                        name=\\\"search\\\"></ngx-mat-select-search>\\n                                </mat-option>\\n                                <mat-option *ngFor=\\\"let u of lists.Userlist|selectfilter:lists.searchuser:'userinfo'\\\" [value]=\\\"u.id\\\">\\n                                    {{u.userinfo}}\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"25\\\" class=\\\"p-r-10\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" *ngIf=\\\"lists.userType=='Super Admin' ||lists.userType=='Manager'\\\">\\n                        <mat-form-field>\\n                            <mat-label>Select Admin Name</mat-label>\\n                            <mat-select [(ngModel)]=\\\"lists.adminid\\\">\\n                                <mat-option>\\n                                    <ngx-mat-select-search [(ngModel)]=\\\"lists.searchuser1\\\"\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" [placeholderLabel]=\\\"'Search...'\\\"\\n                                        name=\\\"search\\\"></ngx-mat-select-search>\\n                                </mat-option>\\n                                <mat-option *ngFor=\\\"let u of lists.Adminlist|selectfilter:lists.searchuser1:'name'\\\" [value]=\\\"u.id\\\">\\n                                    {{u.name}} </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                        <mat-form-field>\\n                            <mat-label>Order By</mat-label>\\n                            <mat-select [(ngModel)]=\\\"lists.order\\\">\\n                                <mat-option *ngFor=\\\"let u of lists.orderlist\\\" [value]=\\\"u.value\\\">\\n                                    {{u.name}}</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-right\\\">\\n                        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"ViewReport()\\\">View Report</button>\\n\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n\\n\\n                    </div>\\n\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                        <a href=\\\"javascript:void\\\">\\n                            <mat-card class=\\\"bg-warning text-white text-center\\\">\\n                                <div class=\\\"p-10\\\">\\n                                    <h2 class=\\\"m-0\\\"><i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"> {{lists.Totalamount}}</i></h2>\\n                                    <small>Total Pending Amount</small>\\n                                </div>\\n                            </mat-card>\\n                        </a>\\n                    </div>\\n\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                        <a href=\\\"javascript:void\\\">\\n                            <mat-card class=\\\"bg-info text-white text-center\\\">\\n                                <div class=\\\"p-10\\\">\\n                                    <h2 class=\\\"m-0\\\">{{lists.Pending}}</h2>\\n                                    <small>Pending Bills</small>\\n                                </div>\\n                            </mat-card>\\n                        </a>\\n\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                    </div>\\n\\n                    <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"p-r-10\\\">\\n                        <mat-form-field>\\n                            <mat-label>Select Depositor</mat-label>\\n                            <mat-select [(ngModel)]=\\\"lists.depositorid\\\">\\n                                <mat-option>--</mat-option>\\n                                <mat-option *ngFor=\\\"let u of lists.Depositorlist\\\" [value]=\\\"u.id\\\">\\n                                    {{u.name}} </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Assign Bills\\\" type=\\\"number\\\" [(ngModel)]=\\\"lists.nobills\\\">\\n                        </mat-form-field>\\n                    </div>\\n\\n                    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-right m-b-10\\\">\\n                        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"BillAssign()\\\">Work Assign</button>\\n                    </div>\\n\\n                    <div fxFlex.gt-sm=\\\"25\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                    </div>\\n                    <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                        <table mat-table matSort [dataSource]=\\\"report\\\">\\n                            <ng-container matColumnDef=\\\"receipt\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Receipt </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.receipt}} </td>\\n                            </ng-container>\\n                            <ng-container matColumnDef=\\\"kno\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> KNo</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.kno}} </td>\\n                            </ng-container>\\n                            <ng-container matColumnDef=\\\"agent\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Agent</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.username}}\\n                                </td>\\n                            </ng-container>\\n                            <ng-container matColumnDef=\\\"cname\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Name </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.cname}} </td>\\n                            </ng-container>\\n                            <ng-container matColumnDef=\\\"mobile\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Mobile </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.mobile}} </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"billamount\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> <i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"> Amount</i> </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> <i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"> {{element.billamount}} </i></td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"lastdate\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Due Date </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastdate}} </td>\\n                            </ng-container>\\n                            <ng-container matColumnDef=\\\"depositor\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Depositor</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.depositor}} </td>\\n                            </ng-container>\\n                            <ng-container matColumnDef=\\\"billstatus\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n                                    {{element.billstatus?element.billstatus:'Pending'}} </td>\\n                            </ng-container>\\n\\n                            <tr mat-header-row *matHeaderRowDef=\\\"lists.displayedColumns; sticky: true\\\"></tr>\\n                            <tr mat-row *matRowDef=\\\"let row; columns: lists.displayedColumns;\\\"></tr>\\n                        </table>\\n                        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20,25,50,100,500]\\\" showFirstLastButtons></mat-paginator>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9Xb3JrbWFuYWdlci9teXdvcmsvbXl3b3JrLmNvbXBvbmVudC5jc3MifQ== */\"","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../../Service/common.service';\n\n@Component({\n  selector: 'app-mywork',\n  templateUrl: './mywork.component.html',\n  styleUrls: ['./mywork.component.css']\n})\nexport class MyworkComponent implements OnInit {\n  hide = true;\n  lists: any = {};\n  Workform: FormGroup;\n  manage: any = {};\n  myworkform: FormGroup;\n  \n  constructor(public common: CommonService, public fb: FormBuilder) { \n    this.lists.TransTypelist = [{ name: \"On Hold\", value: 'onhold'  }, { name: \"Success\", value: 'success'  }, { name: \"Failed\", value: 'failed'  }];\n    this.lists.transid = [];\n    this.GetMyWork();\n  }\n\n  ngOnInit() {\n    this.myworkform = this.fb.group({\n      transstatus: ['', Validators.required],\n      transid: ['', Validators.required],\n      receiptid: [''],\n      depositor: ['', Validators.required],\n    });\n    this.myworkform.controls[\"depositor\"].setValue(localStorage.getItem(\"UserId\"))\n\n  }\n  Save() {\n    this.common.PostMethod(\"Savemywork\", this.myworkform.value).then((res: any) => {\n      if (res.Status == 1) {\n        this.myworkform.reset();\n        this.myworkform.controls['depositor'].setValue(localStorage.getItem(\"UserId\"));\n        this.common.ToastMessage('Success', res.Message);\n        this.GetMyWork();\n      } else {\n        this.common.ToastMessage('Failure', res.Message);\n      }\n    });\n  }\n\n  GetMyWork() {\n    this.common.GetMethod(\"GetMyPendingWork?Id=\" + localStorage.getItem(\"UserId\")).then((res: any) => {\n      this.manage = res.Data || {};\n      this.myworkform.controls[\"receiptid\"].setValue(res.Data.receipt);\n      this.myworkform.controls[\"transstatus\"].setValue(res.Data.billstatus);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9Xb3JrbWFuYWdlci9zZXR0aW5nL3NldHRpbmcuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../../Service/common.service';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n  lists: any = {};\n  constructor(public common: CommonService) { }\n\n  ngOnInit() {\n    this.GetSettingInfo();\n  }\n\n  GetSettingInfo() {\n    this.common.PostMethod(\"GetfilterData\", { file: \"settings\", name: \"id\", value: 1 }).then((res: any) => {\n      console.log(res);\n      this.lists.settingvalue = res.Data[0].value == 0 ? false : true;\n      this.lists.changesetting = this.lists.settingvalue;\n    });\n  }\n\n  ChangeApiStatus(ev) {\n    console.log(this.lists.changesetting);\n    let value = this.lists.changesetting ? 0 : 1;\n    this.common.PostMethod(\"RecordUpdate\", { file: 'settings', name: 'id', value: 1, updatename: 'value', updatevalue: value }).then((res: any) => {\n      if (res.Status == 1) {\n        this.common.ToastMessage('Success', 'Your Api Status Update Successfully')\n      }\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9Xb3JrbWFuYWdlci93b3JrYXNzaWduL3dvcmthc3NpZ24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { CommonService } from '../../Service/common.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-workassign',\n  templateUrl: './workassign.component.html',\n  styleUrls: ['./workassign.component.css']\n})\nexport class WorkassignComponent implements OnInit {\n  hide = true;\n  lists: any = {};\n  report: any = new MatTableDataSource();\n  newreport: any = new MatTableDataSource();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(public common: CommonService) {\n    this.lists.displayedColumns = ['receipt', 'kno', 'agent', 'cname', 'mobile', 'billamount', 'lastdate', 'depositor', 'billstatus'];\n    this.lists.from = new Date();\n    this.lists.to = new Date();\n    this.lists.Totalamount = 0;\n    this.lists.Totalworkassign = 0;\n    this.lists.Totalworkassignsub = 0;\n    this.lists.Totalworkassignpen = 0;\n    this.lists.Pending = 0;\n    this.lists.orderlist = [{ name: \"Descending\", value: 'desc' }, { name: \"Ascending\", value: 'asc' }]\n    this.GetUserList();\n    this.GetAdminList();\n    this.GetDepositorlist();\n  }\n\n  ngOnInit() {\n    this.report.paginator = this.paginator;\n    this.report.sort = this.sort;\n  }\n\n  GetUserList() {\n    if (localStorage.getItem(\"UserType\") == \"Super Admin\") {\n      this.common.GetMethod(\"GetUserInfo\").then((res: any) => {\n        this.lists.Userlist = res.Data;\n        this.lists.Userlist.forEach(element => {\n          element.userinfo = element.name + \"-\" + element.Branchname;\n        });\n        this.ViewReport();\n      });\n    } else {\n      this.common.GetMethod(\"GetUserInfo?userid=\" + localStorage.getItem(\"UserId\")).then((res: any) => {\n        this.lists.Userlist = res.Data;\n        this.lists.Userlist.forEach(element => {\n          element.userinfo = element.name + \"-\" + element.Branchname;\n        });\n        this.ViewReport();\n      });\n    }\n  }\n\n  GetAdminList() {\n    this.common.PostMethod(\"GetfilterData\", { file: \"users\", name: \"usertype\", value: \"Admin\" }).then((res: any) => {\n      this.lists.Adminlist = res.Data;\n    });\n  }\n  GetDepositorlist() {\n    this.common.PostMethod(\"GetfilterData\", { file: \"users\", name: \"usertype\", value: \"Depositor\" }).then((res: any) => {\n      this.lists.Depositorlist = res.Data;\n    });\n  }\n\n  ViewReport() {\n    this.lists.Multiple = false;\n    this.lists.userids = false;\n    this.lists.from = moment(this.lists.from).format(\"YYYY-MM-DD\");\n    this.lists.to = moment(this.lists.to).format(\"YYYY-MM-DD\");\n    this.lists.userType = localStorage.getItem(\"UserType\");\n    if (localStorage.getItem(\"UserType\") == \"Super Admin\") {\n      this.lists.userid = 0;\n    } else if (localStorage.getItem(\"UserType\") == \"Admin\") {\n      if (!this.lists.agentid) {\n        this.lists.userids = [];\n        //  this.lists.userids.push(localStorage.getItem(\"UserId\"));\n        this.lists.Userlist.forEach(element => {\n          this.lists.userids.push(element.id);\n        });\n        this.lists.Multiple = true;\n        this.lists.userid = localStorage.getItem(\"UserId\");\n      }\n    } else {\n      this.lists.userid = localStorage.getItem(\"UserId\");\n    }\n\n    if (this.lists.agentid) {\n      this.lists.userid = this.lists.agentid;\n    }\n\n    if (this.lists.adminid) {\n      this.lists.userids = [];\n      this.lists.Userlist.forEach(element => {\n        if (element.adminid == this.lists.adminid) {\n          this.lists.userids.push(element.id);\n        }\n      });\n    }\n\n    this.lists.myduedate = \"\";\n    if (this.lists.duedate) {\n      let duedate = new Date(this.lists.duedate);\n      let fduedate = moment(duedate).format(\"DD-MM-YYYY\");\n      this.lists.myduedate = fduedate;\n    }\n    this.common.PostMethod('BillAssignReport', this.lists).then((res: any) => {\n      this.report = new MatTableDataSource(res.Data);\n      this.report.paginator = this.paginator;\n      this.report.sort = this.sort;\n      this.newreport = res.Data;\n      this.lists.Totalamount = 0;\n      if (this.lists.duedate) {\n        this.lists.duedate = \"\";\n      }\n      this.lists.Pending = 0;\n      this.lists.Success = 0;\n      res.Data.forEach(element => {\n        if (!element.billstatus || element.billstatus == 'Pending') {\n          this.lists.Pending = this.lists.Pending + 1;\n        }\n        this.lists.Totalamount = this.lists.Totalamount + element.billamount;\n      });\n\n    });\n  }\n  BillAssign() {\n    if (this.lists.nobills > this.lists.Pending) {\n      this.common.ToastMessage(\"Fail\", \"Assigned Bills exceeding the Pending Bills.\")\n    } else {\n      let ids = [];\n      let TotalAmount = 0;\n      for (let i = 0; i <= this.lists.nobills - 1; i++) {\n        TotalAmount = TotalAmount + this.report.data[i].billamount;\n        ids.push(this.report.data[i].id);\n      }\n      this.common.ConfirmMessage(\"Do You Want Confirm Assign Work? Your Assing Work Total Amount is \" + TotalAmount + \"\", (res) => {\n        if (res) {\n          this.common.PostMethod(\"UserWorkAssign\", { ids: ids, Depositor: this.lists.depositorid, Status: \"Assign\" }).then((res: any) => {\n            if (res.Status == 1) {\n              this.common.ToastMessage('Success', res.Message);\n              this.lists.nobills = 0;\n              this.lists.depositorid = 0;\n              this.ViewReport();\n            } else {\n              this.common.ToastMessage('Failure', res.Message);\n            }\n          });\n        }\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { WorkmanagerRoutes } from './workmanager.routing';\r\nimport { DemoMaterialModule } from '../../demo-material-module';\r\nimport { WorkassignComponent } from './workassign/workassign.component';\r\nimport { MyworkComponent } from './mywork/mywork.component';\r\nimport { MatFormFieldModule, MatSelectModule } from '@angular/material';\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\nimport { PipeModule } from './../Pipes/pipe/pipe.module';\nimport { SettingComponent } from './setting/setting.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(WorkmanagerRoutes),\r\n    DemoMaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PipeModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    NgxMatSelectSearchModule,\r\n    \r\n  ],\r\n  declarations: [\r\n    WorkassignComponent,\r\n    MyworkComponent,\r\n    SettingComponent\r\n  ]\r\n})\r\nexport class WorkManagerModule {}\r\n","import { Routes } from '@angular/router';\r\nimport { WorkassignComponent } from './workassign/workassign.component';\r\nimport { MyworkComponent } from './mywork/mywork.component';\r\nimport { SettingComponent } from './setting/setting.component';\r\nexport const WorkmanagerRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'workassign',\r\n        component: WorkassignComponent,\r\n\t\tdata: {\r\n          title: 'Work Assign Manager',\r\n          urls: [\r\n            { title: 'Dashboard', url: '/dashboard' },\r\n            { title: 'Work Assign Manager' }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        path: 'setting',\r\n        component: SettingComponent,\r\n\t\tdata: {\r\n          title: 'Setting',\r\n          urls: [\r\n            { title: 'Dashboard', url: '/dashboard' },\r\n            { title: 'Setting' }\r\n          ]\r\n        }\r\n      },\r\n       {\r\n    path: 'mywork',\r\n    component: MyworkComponent,\r\ndata: {\r\n      title: 'My Work',\r\n      urls: [\r\n        { title: 'Dashboard', url: '/dashboard' },\r\n        { title: 'My Work' }\r\n      ]\r\n      \r\n    }\r\n  }\r\n]\r\n  }];\r\n"],"sourceRoot":""}