{"version":3,"sources":["webpack:///./src/app/Portal/Creditmanager/accountrecharge/accountrecharge.component.html","webpack:///./src/app/Portal/Creditmanager/myrecharge/myrecharge.component.html","webpack:///./src/app/Portal/Creditmanager/accountrecharge/accountrecharge.component.css","webpack:///./src/app/Portal/Creditmanager/accountrecharge/accountrecharge.component.ts","webpack:///./src/app/Portal/Creditmanager/creditmanager.module.ts","webpack:///./src/app/Portal/Creditmanager/creditmanager.routing.ts","webpack:///./src/app/Portal/Creditmanager/myrecharge/myrecharge.component.css","webpack:///./src/app/Portal/Creditmanager/myrecharge/myrecharge.component.ts"],"names":[],"mappings":"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","file":"Portal-Creditmanager-creditmanager-module-es5.js","sourcesContent":["module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <form [formGroup]=\\\"Rechargeform\\\">\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\n                <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <mat-form-field>\\n                        <mat-label>Select User Name</mat-label>\\n                        <mat-select [(ngModel)]=\\\"lists.userid\\\" formControlName=\\\"user_Id\\\">\\n                            <mat-option>\\n                                --\\n                            </mat-option>\\n                            <mat-option *ngFor=\\\"let u of lists.Userlist\\\" [value]=\\\"u.id\\\">\\n                                {{u.name}}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <mat-form-field>\\n                        <input matInput [(ngModel)]=\\\"lists.amount\\\" placeholder=\\\"Recharge Credit\\\" type=\\\"number\\\" formControlName=\\\"credit\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <mat-form-field>\\n                        <input matInput placeholder=\\\"Message\\\" [(ngModel)]=\\\"lists.message\\\" type=\\\"textarea\\\" formControlName=\\\"message\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                    <mat-radio-group aria-label=\\\"Select an option\\\" formControlName=\\\"amounttype\\\">\\n                        <mat-radio-button value=\\\"Due\\\">Due</mat-radio-button>\\n                        <mat-radio-button value=\\\"Advance\\\">Advance</mat-radio-button>\\n                    </mat-radio-group>\\n                </div>\\n            </div>\\n\\n            <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\n\\n                <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-right\\\">\\n                    <button mat-raised-button color=\\\"primary\\\" class=\\\"\\\" type=\\\"submit\\\" [disabled]=\\\"!Rechargeform.valid\\\" (click)=\\\"SubmitCredit()\\\">Submit</button>\\n\\n                </div>\\n            </div>\\n        </form>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \"<mat-card>\\n    <mat-card-content>\\n        <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\n            <div fxFlex.gt-sm=\\\"40\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n\\n            </div>\\n            <div fxFlex.gt-sm=\\\"20\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n                <a href=\\\"javascript:void\\\">\\n                    <mat-card class=\\\"bg-warning text-white text-center\\\">\\n                        <div class=\\\"p-10\\\">\\n                            <h2 class=\\\"m-0\\\"><i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"> {{lists.TotalAmount}}</i></h2>\\n                            <small>My Balance</small>\\n                        </div>\\n                    </mat-card>\\n                </a>\\n            </div>\\n            <div fxFlex.gt-sm=\\\"40\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n            </div>\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                <mat-form-field>\\n                    <input matInput [(ngModel)]=\\\"lists.email\\\" placeholder=\\\"Enter Email Address\\\" type=\\\"email\\\">\\n                </mat-form-field>\\n            </div>\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"p-10\\\">\\n                <mat-form-field>\\n                    <input matInput [(ngModel)]=\\\"lists.amount\\\" placeholder=\\\"Recharge Amount\\\" type=\\\"number\\\">\\n                </mat-form-field>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row wrap\\\">\\n            <div fxFlex.gt-sm=\\\"100%\\\">\\n                <mat-card>\\n                    <mat-card-content>\\n                        <section class=\\\"example-section\\\">\\n                            <label class=\\\"example-margin\\\"><strong>Gateways:</strong></label><br>\\n                            <mat-radio-group [(ngModel)]=\\\"gateway\\\">\\n                                <mat-radio-button class=\\\"example-margin\\\" value=\\\"payu\\\">\\n                                   <img src=\\\"./assets/payu.png\\\"  height=\\\"30\\\" />\\n                                </mat-radio-button><br>\\n                                <mat-radio-button class=\\\"example-margin\\\" value=\\\"cashfree\\\">\\n                                    <img src=\\\"./assets/cashfree.png\\\" height=\\\"30\\\" />\\n                                </mat-radio-button><br>\\n                              \\n                            </mat-radio-group>\\n                        </section>\\n                       \\n                    </mat-card-content>\\n                </mat-card>\\n            </div>\\n        </div>\\n        <div fxLayout=\\\"row wrap\\\" fxFlexAlign=\\\"center\\\" class=\\\"row\\\">\\n            <div fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"text-right\\\">\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"\\\" type=\\\"submit\\\" (click)=\\\"Paynow()\\\">PayNow</button>\\n            </div>\\n            <div>\\n\\n            </div>\\n        </div>\\n    </mat-card-content>\\n</mat-card>\"","module.exports = \".mat-radio-button~.mat-radio-button {\\r\\n    margin-left: 16px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUG9ydGFsL0NyZWRpdG1hbmFnZXIvYWNjb3VudHJlY2hhcmdlL2FjY291bnRyZWNoYXJnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvUG9ydGFsL0NyZWRpdG1hbmFnZXIvYWNjb3VudHJlY2hhcmdlL2FjY291bnRyZWNoYXJnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1yYWRpby1idXR0b25+Lm1hdC1yYWRpby1idXR0b24ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE2cHg7XHJcbn0iXX0= */\"","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../../Service/common.service';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\n\n@Component({\n  selector: 'app-accountrecharge',\n  templateUrl: './accountrecharge.component.html',\n  styleUrls: ['./accountrecharge.component.css']\n})\nexport class AccountrechargeComponent implements OnInit {\n  lists: any = {};\n  Rechargeform: FormGroup;\n  constructor(public common: CommonService, public fb: FormBuilder) {\n    \n    this.GetUserList();\n   }\n\n  ngOnInit() {\n    this.Rechargeform = this.fb.group({\n      user_Id: ['', Validators.required],\n      credit: ['', Validators.required],\n      message: [''],\n      amounttype:[''],\n      \n    });\n  }\n\n  SubmitCredit() {\n    this.lists.aId = window.localStorage.getItem(\"UserId\");\n    this.lists.usertype = localStorage.getItem(\"UserType\");\n    this.common.PostMethod(\"CreditRecharge\", this.lists).then((res: any) => {\n      if (res.Status == 1) {\n        this.common.ToastMessage(\"Success\", res.Message);\n        this.lists.userid = 0;\n        this.lists.amount = 0;\n        this.lists.message = \"\";\n      } else {\n        this.common.ToastMessage(\"Fail\", res.Message);\n\n      }\n    });\n  }\n\n  GetUserList() {\n    if (localStorage.getItem(\"UserType\") == 'Super Admin') {\n      this.common.GetMethod(\"GetDatatable?Name=users\").then((res: any) => {\n        this.lists.Userlist = res.Data;\n      });\n    }\n    if (localStorage.getItem('UserType') == 'Admin') {\n      this.common.PostMethod(\"GetfilterData\", { file: \"users\", name: \"adminid\", value: localStorage.getItem(\"UserId\") }).then((res: any) => {\n        this.lists.Userlist = res.Data;\n      });\n    }\n  }\n\n}\n\n","import { AccountrechargeComponent } from './accountrecharge/accountrecharge.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { CreditRoutes } from './creditmanager.routing';\r\nimport { DemoMaterialModule } from '../../demo-material-module';\nimport { MyrechargeComponent } from './myrecharge/myrecharge.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(CreditRoutes),\r\n    DemoMaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [\r\n    AccountrechargeComponent,\r\n    MyrechargeComponent\r\n  ]\r\n})\r\nexport class CreditmanagerModule { }\r\n","import { MyrechargeComponent } from './myrecharge/myrecharge.component';\r\nimport { AccountrechargeComponent } from './accountrecharge/accountrecharge.component';\r\nimport { Routes } from '@angular/router';\r\nexport const CreditRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'accountrecharge',\r\n        component: AccountrechargeComponent,\r\n        data: {\r\n          title: 'Account Recharge',\r\n          urls: [\r\n            { title: 'Dashboard', url: '/dashboard' },\r\n            { title: 'Account Recharge' }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        path: 'usercredithistory',\r\n        component: AccountrechargeComponent,\r\n        data: {\r\n          title: 'User Credit History',\r\n          urls: [\r\n            { title: 'Dashboard', url: '/dashboard' },\r\n            { title: 'User Credit History' }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        path: 'myrecharge',\r\n        component: MyrechargeComponent,\r\n        data: {\r\n          title: 'My Credit Recharge',\r\n          urls: [\r\n            { title: 'Dashboard', url: '/dashboard' },\r\n            { title: 'My Credit Recharge' }\r\n          ]\r\n        }\r\n      },\r\n    ]\r\n  }];\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BvcnRhbC9DcmVkaXRtYW5hZ2VyL215cmVjaGFyZ2UvbXlyZWNoYXJnZS5jb21wb25lbnQuY3NzIn0= */\"","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from './../../Service/common.service';\nimport { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-myrecharge',\n  templateUrl: './myrecharge.component.html',\n  styleUrls: ['./myrecharge.component.css']\n})\nexport class MyrechargeComponent implements OnInit {\n  lists: any = {};\n  gateway: any = '';\n  constructor(public rotuter: ActivatedRoute, public common: CommonService, public http: HttpClient) { }\n\n  ngOnInit() {\n    this.rotuter.queryParams.subscribe((res: any) => {\n      console.log(res);\n      if (res.txnid) {\n        if (res.status == 1) {\n          this.GetMyBalance();\n          this.StatusPopup(res);\n        } else {\n          this.StatusPopup(res);\n        }\n      }\n    })\n    this.GetMyBalance();\n  }\n\n  Paynow() {\n    let Data = JSON.parse(localStorage.getItem(\"UserProfile\"));\n    let surl = this.common.Url + \"SuccessPayment\";\n    let furl = this.common.Url + \"FailPayment\";;\n    let url = \"name=\" + Data.name + \"&email=\" + this.lists.email + \"&mobile=\" + Data.mobile + \"&amount=\" + this.lists.amount + \"&description=WalleteRecharge&userid=\" + window.localStorage.getItem(\"UserId\") + \"&surl=\" + surl + \"&furl=\" + furl;\n    if (this.gateway == 'cashfree') {\n      this.CashFreePayment();\n    } else {\n      let info = window.open(this.common.Url + 'Payment/index.html?' + url, '_self', 'location=no,menubar=no');\n    }\n  }\n\n  CashFreePayment() {\n    let Data = JSON.parse(localStorage.getItem(\"UserProfile\"));\n    var order_id = Math.floor(100000 + Math.random() * 900000);\n    console.log(order_id);\n    let MyData = {\n      appId: \"614847c83c2ad6be48fccec8b48416\",\n      secretKey: \"e95eaedf0882f539e9c7f3cdccda7520661c8b49\",\n      orderId: window.localStorage.getItem(\"UserId\") + '_' + order_id,\n      orderAmount: this.lists.amount,\n      orderCurrency: \"INR\",\n      orderNote: \"WALLETRECHARGE\",\n      customerEmail: this.lists.email,\n      customerName: Data.name,\n      customerPhone: Data.mobile,\n      returnUrl: \"https://apitechjaipur.easybillpay.co.in/CashfreeSuccessPayment\"\n    }\n    this.common.PostMethod(\"CashFreeLink\", MyData).then((res:any) => {\n      console.log(MyData);\n        if(res.Data.status==\"OK\"){\n      let info = window.open(res.Data.paymentLink, '_self', 'location=no,menubar=no');\n      }\n    });\n}\n\n  GetMyBalance() {\n    this.common.PostMethod(\"GetMyBalance\", { userid: localStorage.getItem(\"UserId\") }).then((res: any) => {\n      this.lists.TotalAmount = res.Balance;\n    });\n  }\n\n  StatusPopup(ev) {\n    if (ev.status == 1) {\n      this.common.ToastMessage(\"Success\", \"Your Account Recharge Successfully Amount \" + ev.amount + \". with Transaction Id \" + ev.txnid + \"\")\n    } else {\n      this.common.ToastMessage(\"Fail\", \"Your Account Recharge Failed  Amount \" + ev.amount + \". with Transaction Id \" + ev.txnid + \"\")\n    }\n  }\n\n}\n"],"sourceRoot":""}